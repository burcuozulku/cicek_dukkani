import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';


void main() {
  runApp(MyApp());
}
Color kPrimaryColor = Color(0xFFEC407A);
Color kStarsColor = Color(0xFFFFA726);

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
        textTheme: GoogleFonts.catamaranTextTheme(),
      ),
      debugShowCheckedModeBanner: false,
      home: Flowershop(),
    );
  }
}

class FlowerDetail extends StatelessWidget {

  final Flower flower;

  FlowerDetail({@required this.flower});

  @override
  Widget build(BuildContext context) {

    Size size = MediaQuery.of(context).size;

    return Scaffold(
      body: Stack(
        children: [

          Container(
            child: Hero(
              tag: flower.title,
              child: Image.asset(
                  flower.image,
                  fit: BoxFit.fitWidth
              ),
            ),
          ),

          Padding(
            padding: EdgeInsets.only(top: 48, left: 32,),
            child: GestureDetector(
              onTap: () {
                Navigator.pop(context);
              },
              child: Align(
                alignment: Alignment.topLeft,
                child: Container(
                  height: 42,
                  width: 42,
                  decoration: BoxDecoration(
                    color: Colors.white,
                    shape: BoxShape.circle,
                  ),
                  child: Center(
                    child: Icon(
                      Icons.arrow_back,
                      color: kPrimaryColor,
                    ),
                  ),
                ),
              ),
            ),
          ),

          Align(
            alignment: Alignment.bottomCenter,
            child: Container(
              height: size.height * 0.5,
              padding: EdgeInsets.only(top: 64),
              decoration: BoxDecoration(
                color: Colors.grey[200],
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(30),
                ),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: [

                  Expanded(
                    child: Container(
                      padding: EdgeInsets.only(right: 32, left: 32, bottom: 16,),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [

                          Text(
                            flower.title,
                            style: GoogleFonts.catamaran(
                              fontSize: 28,
                              fontWeight: FontWeight.bold,
                              height: 1,
                            ),
                          ),

                          Text(
                            flower.country.fullname,
                            style: GoogleFonts.catamaran(
                              fontSize: 18,
                              color: Colors.grey,
                              fontWeight: FontWeight.bold,
                            ),
                          ),

                          Padding(
                            padding: EdgeInsets.symmetric(vertical: 8),
                            child: Row(
                              children: [

                                Row(
                                  children: <Widget>[

                                    Icon(Icons.star, size: 20, color: kStarsColor,),
                                    Icon(Icons.star, size: 20, color: kStarsColor,),
                                    Icon(Icons.star, size: 20, color: kStarsColor,),
                                    Icon(Icons.star, size: 20, color: kStarsColor,),
                                    Icon(Icons.star_half, size: 20, color: kStarsColor,),

                                  ],
                                ),

                                SizedBox(
                                  width: 12,
                                ),

                                Text(
                                  flower.score,
                                  style: GoogleFonts.catamaran(
                                    fontSize: 16,
                                    color: Colors.grey,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),

                              ],
                            ),
                          ),

                          Expanded(
                            child: SingleChildScrollView(
                              physics: BouncingScrollPhysics(),
                              child: Text(
                                flower.description,
                                style: GoogleFonts.catamaran(
                                  fontSize: 16,
                                ),
                              ),
                            ),
                          ),

                        ],
                      ),
                    ),
                  ),

                  Container(
                    height: 100,
                    width: size.width,
                    padding: EdgeInsets.only(top: 16, left: 32, right: 32, bottom: 32,),
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.only(
                        topLeft: Radius.circular(30),
                      ),
                    ),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [

                        Container(
                          width: size.width / 1 - 80,
                          decoration: BoxDecoration(
                            color: kPrimaryColor,
                            borderRadius: BorderRadius.all(
                              Radius.circular(15),
                            ),
                            boxShadow: [
                              BoxShadow(
                                color: kPrimaryColor.withOpacity(0.4),
                                spreadRadius: 2,
                                blurRadius: 2,
                                offset: Offset(0, 0),
                              ),
                            ],
                          ),
                          child: Center(
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                Text(
                                  "SipariÅŸ Ver",
                                  style: GoogleFonts.catamaran(
                                    fontSize: 18,
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),
                                SizedBox(
                                  width: 8,
                                ),
                                Icon(
                                  Icons.keyboard_arrow_down,
                                  color: Colors.white,
                                ),
                              ],
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),

                ],
              ),
            ),
          ),

          Align(
            alignment: Alignment.bottomLeft,
            child: Padding(
              padding: EdgeInsets.only(left: 32, bottom: (size.height * 0.5) - (75 / 2)),
              child: Card(
                elevation: 4,
                margin: EdgeInsets.all(0),
                clipBehavior: Clip.antiAlias,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.all(
                    Radius.circular(15),
                  ),
                ),
                child: Container(
                  width: 75,
                  height: 75,
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: AssetImage(flower.country.image),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class Flowershop extends StatefulWidget {
  @override
  _FlowershopState createState() => _FlowershopState();
}

class _FlowershopState extends State<Flowershop> {

  List<Filter> filters = getFilterList();
  Filter selectedFilter;

  List<NavigationItem> navigationItems = getNavigationItemList();
  NavigationItem selectedItem;

  List<Flower> flowers = getFlowerList();
  List<Country> countrys = getCountryList();

  @override
  void initState() {
    super.initState();
    setState(() {
      selectedFilter = filters[0];
      selectedItem = navigationItems[0];
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        brightness: Brightness.light,
        leading: Icon(
          Icons.sort,
          color: kPrimaryColor,
          size: 28,
        ),
        actions: [
          Padding(
            padding: EdgeInsets.only(right: 16,),
            child: Icon(
              Icons.search,
              color: Colors.grey[400],
              size: 28,
            ),
          ),
        ],
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [

          Container(
            padding: EdgeInsets.only(top: 16, left: 16, right: 16),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.only(
                bottomRight: Radius.circular(40),
              ),
              boxShadow: [
                BoxShadow(
                  color: Colors.grey.withOpacity(0.2),
                  spreadRadius: 8,
                  blurRadius: 12,
                  offset: Offset(0, 3),
                ),
              ],
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [

                Text(
                  "Ã‡iÃ§ekler",
                  style: GoogleFonts.courgette(
                    fontWeight: FontWeight.w900,
                    fontSize: 40,
                    height: 1,
                  ),
                ),

                SizedBox(
                  height: 16,
                ),

                Padding(
                  padding: EdgeInsets.only(right: 75),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: buildFilters(),
                  ),
                ),

              ],
            ),
          ),

          Expanded(
            child: Container(
              child: ListView(
                physics: BouncingScrollPhysics(),
                scrollDirection: Axis.horizontal,
                children: buildFlowers(),
              ),
            ),
          ),

          Container(
            decoration: BoxDecoration(
              color: Colors.blueGrey,
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(40),
              ),
            ),
            child: Column(
              children: [

                Padding(
                  padding: EdgeInsets.all(16),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [

                      Text(
                        "Ãœlkeler",
                        style: GoogleFonts.courgette(
                          fontSize: 22,
                          fontWeight: FontWeight.bold,
                          color: Colors.black,
                        ),
                      ),
                    ],
                  ),
                ),

                Container(
                  height: 100,
                  margin: EdgeInsets.only(bottom: 16),
                  child: ListView(
                    physics: BouncingScrollPhysics(),
                    scrollDirection: Axis.horizontal,
                    children: buildCountrys(),
                  ),
                ),
              ],
            ),
          ),

        ],
      ),
      bottomNavigationBar: Container(
        height: 70,
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.only(
            topLeft: Radius.circular(25),
            topRight: Radius.circular(25),
          ),
          boxShadow: [
            BoxShadow(
              color: Colors.pink.withOpacity(0.2),
              spreadRadius: 8,
              blurRadius: 12,
              offset: Offset(0, 3),
            ),
          ],
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          children: buildNavigationItems(),
        ),
      ),
    );
  }

  List<Widget> buildFilters(){
    List<Widget> list = [];
    for (var i = 0; i < filters.length; i++) {
      list.add(buildFilter(filters[i]));
    }
    return list;
  }

  Widget buildFilter(Filter item){
    return GestureDetector(
      onTap: () {
        setState(() {
          selectedFilter = item;
        });
      },
      child: Container(
        height: 50,
        child: Stack(
          children: <Widget>[

            Align(
              alignment: Alignment.bottomLeft,
              child: Container(
                width: 30,
                height: 3,
                color: selectedFilter == item ? kPrimaryColor : Colors.transparent,
              ),
            ),

            Center(
              child: Text(
                item.name,
                style: GoogleFonts.catamaran(
                  color: selectedFilter == item ? kPrimaryColor : Colors.indigo[400],
                  fontSize: 12,
                  fontWeight: FontWeight.bold,
                  letterSpacing: 3,
                ),
              ),
            )

          ],
        ),
      ),
    );
  }

  List<Widget> buildFlowers(){
    List<Widget> list = [];
    for (var i = 0; i < flowers.length; i++) {
      list.add(buildFlower(flowers[i], i));
    }
    return list;
  }

  Widget buildFlower(Flower flower, int index){
    return GestureDetector(
      onTap: () {
        Navigator.push(
          context,
          MaterialPageRoute(builder: (context) => FlowerDetail(flower: flower)),
        );
      },
      child: Container(
        margin: EdgeInsets.only(right: 32, left: index == 0 ? 16 : 0, bottom: 8),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          mainAxisAlignment: MainAxisAlignment.start,
          children: <Widget>[

            Expanded(
              child: Container(
                decoration: BoxDecoration(
                  boxShadow: [
                    BoxShadow(
                      color: Colors.lime.withOpacity(0.5),
                      spreadRadius: 8,
                      blurRadius: 12,
                      offset: Offset(0, 3),
                    ),
                  ],
                ),
                margin: EdgeInsets.only(bottom: 16, top: 24,),
                child: Hero(
                  tag: flower.title,
                  child: Image.asset(
                    flower.image,
                    fit: BoxFit.fitWidth,
                  ),
                ),
              ),
            ),

            Text(
              flower.title,
              style: GoogleFonts.catamaran(
                fontSize: 16,
                fontWeight: FontWeight.bold,
              ),
            ),

            Text(
              flower.country.fullname,
              style: TextStyle(
                fontSize: 14,
                color: Colors.grey,
                fontWeight: FontWeight.bold,
              ),
            ),

          ],
        ),
      ),
    );
  }

  List<Widget> buildCountrys(){
    List<Widget> list = [];
    for (var i = 0; i < countrys.length; i++) {
      list.add(buildCountry(countrys[i], i));
    }
    return list;
  }

  Widget buildCountry(Country country, int index){
    return Container(
      decoration: BoxDecoration(
        color: Colors.grey[200],
        borderRadius: BorderRadius.all(
          Radius.circular(15),
        ),
      ),
      padding: EdgeInsets.all(12),
      margin: EdgeInsets.only(right: 16, left: index == 0 ? 16 : 0),
      width: 255,
      child: Row(
        mainAxisAlignment: MainAxisAlignment.start,
        children: <Widget>[

          Card(
            elevation: 4,
            margin: EdgeInsets.all(0),
            clipBehavior: Clip.antiAlias,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.all(
                Radius.circular(15),
              ),
            ),
            child: Container(
              width: 75,
              height: 75,
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: AssetImage(country.image),
                  fit: BoxFit.cover,
                ),
              ),
            ),
          ),

          SizedBox(
            width: 12,
          ),

          Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [

              Text(
                country.fullname,
                style: GoogleFonts.catamaran(
                  fontSize: 16,
                  fontWeight: FontWeight.bold,
                ),
              ),

              Row(
                children: [

                  Icon(
                    Icons.library_books,
                    color: Colors.grey,
                    size: 14,
                  ),

                  SizedBox(
                    width: 8,
                  ),

                  Text(
                    country.flowers.toString() + " bitki tÃ¼rÃ¼  ",
                    style: TextStyle(
                      fontSize: 14,
                      color: Colors.grey,
                      fontWeight: FontWeight.bold,
                    ),
                  ),

                ],
              ),

            ],
          ),

        ],
      ),
    );
  }

  List<Widget> buildNavigationItems(){
    List<Widget> list = [];
    for (var navigationItem in navigationItems) {
      list.add(buildNavigationItem(navigationItem));
    }
    return list;
  }

  Widget buildNavigationItem(NavigationItem item){
    return GestureDetector(
      onTap: () {
        setState(() {
          selectedItem = item;
        });
      },
      child: Container(
        width: 50,
        child: Center(
          child: Icon(
            item.iconData,
            color: selectedItem == item ? kPrimaryColor : Colors.grey[400],
            size: 28,
          ),
        ),
      ),
    );
  }

}
class NavigationItem {

  IconData iconData;

  NavigationItem(this.iconData);

}

List<NavigationItem> getNavigationItemList(){
  return <NavigationItem>[
    NavigationItem(Icons.home),
    NavigationItem(Icons.shopping_bag),
    NavigationItem(Icons.person),
  ];
}

class Flower {

  String title;
  String description;
  Country country;
  String score;
  String image;

  Flower(this.title, this.description, this.country, this.score, this.image);

}

List<Flower> getFlowerList(){
  return <Flower>[
    Flower(
      "Manolya",
      "Manolya Ã§iÃ§eÄŸi, Ã§ok hoÅŸ bir kokuya sahip olan, oval ve yapraklarÄ± kaba bir gÃ¶rÃ¼nÃ¼mÃ¼ bulunan bir Ã§iÃ§ektir. Manolya Ã§iÃ§eÄŸi, Ã§eÅŸit olarak iki tÃ¼rlÃ¼ olarak ayrÄ±lmaktadÄ±r. Manolya Ã§iÃ§eÄŸi, her mevsim yeÅŸil rengini koruyabilen nadir bitkiler arasÄ±nda yerini almaktadÄ±r.",
      Country(
        "Asya ,Amerika ,TÃ¼rkiye",
        1,
        "assets/country/world1.jpg",
      ),
      "4.28",
      "assets/flowers/magnolia.jpg",
    ),
    Flower(
      "Orkide",
      "Orkide, yapÄ±lan araÅŸtÄ±rmalara gÃ¶re dÃ¼nyada en sevilen Ã§iÃ§ekler arasÄ±nda birinci, en Ã§ok satÄ±lanlar arasÄ±nda ise ikinci sÄ±rada yer almaktadÄ±r. Ã‡ok yÄ±llÄ±k bitkiler olarak bilinir. Her yÄ±l dÃ¼zenli olarak Ã§iÃ§ek aÃ§an bu bitki bazÄ± durumlarda ise yÄ±lda iki Ã¼Ã§ kez Ã§iÃ§ek aÃ§abilir. Orkideler bu Ã¶zellikleri nedeniyle ilk keÅŸfedildikleri andan itibaren sÃ¼rekli ilgi odaÄŸÄ±dÄ±r. Ã‡iÃ§ek olmasÄ±nÄ±n yanÄ± sÄ±ra, MaraÅŸ dondurmasÄ± ve salebin de tadÄ±nÄ±n kaynaÄŸÄ±dÄ±r.",
      Country(
        "Asya ,Avrupa ,Amerika ",
        1,
        "assets/country/world1.jpg",
      ),
      "4.8",
      "assets/flowers/pembe-orkide.jpg",
    ),
    Flower(
      "Lale",
      "Lale renk renk Ã§eÅŸitleri olan bir sÃ¼s bitkisidir. AnavatanÄ± Asya olmasÄ±na raÄŸmen TÃ¼rkiyeâ€™de daha yaygÄ±nlaÅŸmÄ±ÅŸ ve geliÅŸtirilmiÅŸtir. Ã–zellikle OsmanlÄ± zamanÄ±nda bÃ¼yÃ¼k Ã¶nem kazanmÄ±ÅŸtÄ±r. Lale, soÄŸandan yetiÅŸir. TopraÄŸÄ±nÄ±n fazlasÄ±yla gÃ¼breli olmasÄ± gerekir.",
      Country(
        "TÃ¼rkiye ,Asya ",
        1,
        "assets/country/world1.jpg",
      ),
      "4.14",
      "assets/flowers/lale.jpg",
    ),
    Flower(
      "Begonya",
      "Evde bakÄ±labilecek sÃ¼s bitkilerinden bahsedilecekse, begonya akÄ±llara ilk gelen Ã§iÃ§eklerden birisidir. YapÄ±sÄ± gereÄŸi Ä±lÄ±man iklim koÅŸullarÄ±na uygun bir bitki olduÄŸundan evlerde yetiÅŸtirilmeye oldukÃ§a mÃ¼saittir. Ã‡iÃ§eklere karÅŸÄ± ilgisi olan ve evinde sÃ¼s bitkisi yetiÅŸtirmeyi seven kiÅŸilerin vazgeÃ§ilmezi olan begonya, kÄ±ÅŸ aylarÄ± baÅŸta olmak Ã¼zere her mevsimde Ã§iÃ§ek vermektedir.",
      Country(
        "Asya, GÃ¼ney Amerika ve Brezilya",
        1,
        "assets/country/world1.jpg",
      ),
      "4.14",
      "assets/flowers/begonyalar.jpg",
    ),
    Flower(
      "Colorado columbine",
      "â€˜Amerikaâ€™nda Rocky Mountains (Rocky daÄŸlarÄ±)â€™da yetiÅŸen bu Ã§iÃ§ek, Coloradoâ€™nun 4500 metre yÃ¼ksekliÄŸindeki daÄŸÄ±na tÄ±rmanan daÄŸcÄ±larÄ±nÄ± â€˜HoÅŸ geldin Ã¶dÃ¼lÃ¼â€™ diye bahsediliyor bu Ã§iÃ§ekten. DoÄŸalarÄ±ndan koparÄ±lan bu Ã§iÃ§eÄŸin tanesinin fiyatÄ± 50 dolara kadar Ã§Ä±kabiliyormuÅŸ.",
      Country(
        "Amerika",
        1,
        "assets/country/world1.jpg",
      ),
      "4.14",
      "assets/flowers/colorado-columbine.jpg",
    ),
    Flower(
      "GÃ¼l",
      "Masalla gerÃ§eÄŸi birleÅŸtiren bir eserdir. GeÃ§miÅŸi temsil eden dede ile geleceÄŸi temsil eden Ã§ocuk arasÄ±nda dramatik bir iliÅŸki kurarak insan duygu ve dÃ¼ÅŸÃ¼ncelerine kendine has yorumlar getirilir. AdÄ± eserde hiÃ§ geÃ§meyen Ã§ocuÄŸun saf ve temiz dÃ¼nyasÄ±ndan, hayatÄ±n acÄ± ve Ã§Ä±plak gerÃ§eÄŸine uzanan bir roman kurgusu meydana Ã§Ä±karÄ±lÄ±r. Aytmatovâ€™un, edebiyat Ã¢leminde geniÅŸ akisler uyandÄ±ran, uzun yÄ±llar tartÄ±ÅŸÄ±lan, verilmek istenen mesajla yaratÄ±lan tiplerin bÃ¼yÃ¼k bir uyum saÄŸladÄ±ÄŸÄ± eserlerinden biridir.",
      Country(
        "TÃ¼rkiye ,Hollanda ,Ä°ran ,Ã‡in ",
        1,
        "assets/country/world1.jpg",
      ),
      "4.20",
      "assets/flowers/gÃ¼l.jpg",
    ),
    Flower(
      "Lotus Ã§iÃ§eÄŸi",
      "Lotus Ã§iÃ§eÄŸi bir su bitkisidir. Suyun yÃ¼zeyinde, toprak gereksinimi olmadan yaÅŸar. Tertemiz yapraklarÄ± ve gÃ¼zel Ã§iÃ§eÄŸi ile bulunduÄŸu kirli sularda hemen belli eder kendini. Hem duygusal hem de madden fayda saÄŸlayan bir bitkidir. EÅŸi ve benzeri olmayan bir Ã§iÃ§ektir anlayacaÄŸÄ±nÄ±z.",
      Country(
        "Hindistan",
        1,
        "assets/country/world1.jpg",
      ),
      "4.14",
      "assets/flowers/lotus_Ã§iÃ§eÄŸi.jpg",
    ),
    Flower(
      "Ä°stanbul Kardeleni",
      "Nergisgiller (Amaryllidaceae) familyasÄ±ndan TÃ¼rkiye'de endemik olan bir kardelen alt tÃ¼rÃ¼. TÃ¼rkiye'de doÄŸal olarak Ä°stanbul'la birlikte Bolu, Bursa ve KÄ±rklareli'de bulunur. GÃ¶knar ve kayÄ±n ormanlarÄ± kenarÄ±nda gÃ¶rÃ¼lÃ¼r. Ocak-Nisan aylarÄ± Ã§iÃ§eklenme dÃ¶nemidir. ",
      Country(
        "TÃ¼rkiye",
        1,
        "assets/country/world1.jpg",
      ),
      "4.52",
      "assets/flowers/istanbul_kardeleni.jpg",
    ),
    Flower(
      "Ortanca Ã§iÃ§eÄŸi",
      "Ortanca Ã§iÃ§eÄŸi: Anayurdu Japonya olan ortanca, gÃ¶steriÅŸli Ã§iÃ§ekleri nedeniyle DÃ¼nyanÄ±n birÃ§ok yerinde yaygÄ±n olarak yetiÅŸtirilen, 1-3 metre arasÄ± boylanabilen, kÄ±ÅŸÄ±n yapraklarÄ±nÄ± dÃ¶ken, Ã§alÄ± gÃ¶vdeli bir sÃ¼s bitkisidir bilinen 80 kadar doÄŸal tÃ¼rÃ¼ vardÄ±r.",
      Country(
        "Japonya ,Ã‡in",
        1,
        "assets/country/world1.jpg",
      ),
      "4.14",
      "assets/flowers/ortanca_cicegi.jpg",
    ),
    Flower(
      "MÃ¼ge Ã§iÃ§eÄŸi",
      "MÃ¼ge Bitkisi Avrupa Ã¼lkelerinde Lily of the valley TÃ¼rkiyeâ€™de ayrÄ±ca Ä°nci Ã‡iÃ§eÄŸi olarak bilinir. Kuzey yarÄ±m kÃ¼renin Ä±lÄ±man iklimli tÃ¼m bÃ¶lgelerinde yaygÄ±n olarak yetiÅŸebilmektedir. Ã–zellikle yurt dÄ±ÅŸÄ±nda yeni evlenen Ã§iftler uÄŸur getirdiÄŸi ve gÃ¼zel kokusundan dolayÄ± gelin Ã§iÃ§eÄŸi olarak tercih edilmektedir.AyrÄ±ca parfÃ¼meride yaygÄ±n olarak kullanÄ±lmaktadÄ±r.",
      Country(
        "Avrupa ,TÃ¼rkiye",
        1,
        "assets/country/world1.jpg",
      ),
      "4.24",
      "assets/flowers/muge_cicegi.jpg",
    ),
  ];
}

class Country {

  String fullname;
  int flowers;
  String image;

  Country(this.fullname, this.flowers, this.image);

}

List<Country> getCountryList(){
  return <Country>[
    Country(
      "TÃ¼rkiye",
      5,
      "assets/country/world1.jpg",
    ),
    Country(
      "Asya",
      4,
      "assets/country/world1.jpg",
    ),
    Country(
      "GÃ¼ney Amerika",
      1,
      "assets/country/world1.jpg",
    ),
    Country(
      "Brezilya",
      1,
      "assets/country/world1.jpg",
    ),
    Country(
      "Amerika",
      3,
      "assets/country/world1.jpg",
    ),
    Country(
      "Hindistan",
      1,
      "assets/country/world1.jpg",
    ),
    Country(
      "Japonya",
      1,
      "assets/country/world1.jpg",
    ),
    Country(
      "Avrupa",
      2,
      "assets/country/world1.jpg",
    ),
    Country(
      "Ã‡in",
      2,
      "assets/country/world1.jpg",
    ),
    Country(
      "Hollanda",
      1,
      "assets/country/world1.jpg",
    ),
    Country(
      "Ä°ran",
      1,
      "assets/country/world1.jpg",
    ),

  ];
}

class Filter {

  String name;

  Filter(this.name);

}

List<Filter> getFilterList() {
  return <Filter>[
    Filter("Ã‡Ä°Ã‡EK"),
    Filter("HEDÄ°YE"),
    Filter("SEPETÄ°M"),
  ];
}

